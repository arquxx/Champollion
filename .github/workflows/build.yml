name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ created ]

env:
  PROJECT_NAME: Champollion
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup vcpkg (with caching)
      uses: actions/cache@v3
      id: cache-vcpkg
      with:
        path: vcpkg
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json', '**/vcpkg-configuration.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Bootstrap vcpkg (if not cached)
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      shell: bash
      run: |
        git clone https://github.com/microsoft/vcpkg.git vcpkg
        ./vcpkg/bootstrap-vcpkg.bat

    - name: Set VCPKG_ROOT and Triplet
      shell: bash
      run: |
        echo "VCPKG_ROOT=${{github.workspace}}/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static" >> $GITHUB_ENV

    - name: List vcpkg Packages (for debugging)
      shell: pwsh
      run: |
        & "${{github.workspace}}/vcpkg/vcpkg.exe" list

    - name: Configure CMake (with vcpkg)
      shell: pwsh  # Use PowerShell!
      run: |
        cmake -B ${{github.workspace}}/build `
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
          -DCHAMPOLLION_USE_STATIC_RUNTIME:BOOL=TRUE `
          -DCMAKE_INSTALL_PREFIX:STRING=${{github.workspace}}/build/extern `
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      shell: bash
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.PROJECT_NAME}}
        path: build/Champollion/Release/Champollion.exe
        retention-days: 90

  release:
     if: startsWith(github.ref, 'refs/tags/')
     runs-on: ubuntu-latest
     permissions:
       contents: write
     needs: build
     steps:
       - name: Download artifact
         uses: actions/download-artifact@v4
         with:
           name: ${{ env.PROJECT_NAME }}
           path: artifacts/${{ env.PROJECT_NAME }}
       - name: Zip artifacts
         run: |
           ls -la artifacts/*
           cd artifacts/${{ env.PROJECT_NAME }}
           zip -r9 "../${{ env.PROJECT_NAME }}-${{ github.ref_name }}.zip" *
       - name: Release
         uses: softprops/action-gh-release@v1
         with:
           files: |
             artifacts/${{ env.PROJECT_NAME }}-${{ github.ref_name }}.zip
           draft: false
           prerelease: false
